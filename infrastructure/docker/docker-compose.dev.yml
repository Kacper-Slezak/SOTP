# Plik docker-compose dla Å›rodowiska deweloperskiego

version: '3.8'

services:
  # Serwis backendu (FastAPI)
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../../backend:/app
    env_file:
      - ../../.env
    depends_on:
      - postgres
      - redis
    networks:
      - sotp_network

  # Serwis frontendu (Next.js)
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../../frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - sotp_network

  # Baza danych dla inwentarza
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sotp_network

  # Baza danych dla metryk
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_USER: ${TIMESCALEDB_USER}
      POSTGRES_PASSWORD: ${TIMESCALEDB_PASSWORD}
      POSTGRES_DB: ${TIMESCALEDB_DB}
    ports:
      - "${TIMESCALEDB_PORT}:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - sotp_network

  # Serwis Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - sotp_network

networks:
  sotp_network:
    driver: bridge

volumes:
  postgres_data:
  timescale_data: