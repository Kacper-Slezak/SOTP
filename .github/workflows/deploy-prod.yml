# .github/workflows/deploy-prod.yml - Workflow wdroÅ¼enia na produkcjÄ™

name: CD - Production Deployment

on:
  push:
    tags:
      - 'v*' # Uruchom na kaÅ¼dy tag zaczynajÄ…cy siÄ™ od 'v', np. v1.0.0

jobs:
  # Zadanie 1: Symulacja wdroÅ¼enia
  deploy:
    name: ðŸš€ Deploy to Production
    runs-on: ubuntu-latest
    # Dodanie Å›rodowiska "production" wymusza manualnÄ… akceptacjÄ™ (jeÅ›li tak skonfigurowano w ustawieniach)
    environment:
      name: production
      url: https://sotp.example.com # ZmieÅ„ na swÃ³j URL
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SIMULATING Deployment via SSH
        run: |
          echo "Connecting to SOTP production server..."
          echo "Deploying version ${{ github.ref_name }}..."
          sleep 15
          echo "Deployment command completed successfully!"

  # Zadanie 2: WysÅ‚anie powiadomienia o statusie wdroÅ¼enia
  notify:
    name: ðŸ“¢ Notify on Status
    runs-on: ubuntu-latest
    needs: deploy
    # Uruchom zawsze, aby dostaÄ‡ powiadomienie zarÃ³wno o sukcesie, jak i o poraÅ¼ce
    if: always()
    uses: ./.github/workflows/discord_notifier.yml
    with:
      # Dynamiczne przekazanie statusu ('success' lub 'failure') z poprzedniego zadania
      status: ${{ needs.deploy.result }}
      environment: Production
      commit_sha: ${{ github.sha }}
      actor: ${{ github.actor }}
    secrets:
      # Przekazanie sekretu z URL webhooka
      webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}