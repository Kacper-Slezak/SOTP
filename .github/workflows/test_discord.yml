# .github/workflows/test_discord.yml - Test Discord Notifier

name: üß™ Discord Notifier Test

on:
  # Rƒôczne uruchomienie z zak≈Çadki Actions
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Test type to run'
        required: true
        default: 'both'
        type: choice
        options:
          - both
          - success
          - failure

  # Automatyczne uruchomienie przy push taga test-*
  push:
    tags:
      - 'test-*'

jobs:
  # ===================================================================
  # JOB 1: Symulacja SUKCESU
  # ===================================================================
  simulate_success:
    name: ‚úÖ Simulating Successful Job
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'success' || github.event.inputs.test_type == 'both' || github.event_name == 'push'
    timeout-minutes: 2

    steps:
      - name: üé≠ Mock successful operation
        run: |
          echo "==================================="
          echo "üöÄ Starting deployment simulation..."
          echo "==================================="
          sleep 3

          echo "‚úÖ Database connection: OK"
          sleep 2

          echo "‚úÖ Services health check: OK"
          sleep 2

          echo "‚úÖ Deployment process: OK"
          sleep 2

          echo "==================================="
          echo "üéâ Deployment completed successfully!"
          echo "==================================="

  # ===================================================================
  # JOB 2: Symulacja PORA≈ªKI
  # ===================================================================
  simulate_failure:
    name: ‚ùå Simulating Failed Job
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'failure' || github.event.inputs.test_type == 'both' || github.event_name == 'push'
    timeout-minutes: 2

    steps:
      - name: üé≠ Mock failed operation
        run: |
          echo "==================================="
          echo "üöÄ Starting deployment simulation..."
          echo "==================================="
          sleep 3

          echo "‚úÖ Database connection: OK"
          sleep 2

          echo "‚ùå Services health check: FAILED"
          echo "Error: Connection timeout to service 'api-gateway'"
          sleep 2

          echo "==================================="
          echo "üö® Deployment FAILED!"
          echo "==================================="
          exit 1  # To spowoduje b≈ÇƒÖd

  # ===================================================================
  # JOB 3: Powiadomienie o SUKCESIE
  # ===================================================================
  notify_success:
    name: üì¢ Success Notification
    # ‚ùå NIE DODAWAJ runs-on tutaj!
    needs: simulate_success
    if: success() && (github.event.inputs.test_type == 'success' || github.event.inputs.test_type == 'both' || github.event_name == 'push')
    uses: ./.github/workflows/discord_notifier.yml
    with:
      status: success
      environment: TEST-SUCCESS
      commit_sha: ${{ github.sha }}
      actor: ${{ github.actor }}
    secrets:
      webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}

  # ===================================================================
  # JOB 4: Powiadomienie o PORA≈ªCE
  # ===================================================================
  notify_failure:
    name: üì¢ Failure Notification
    # ‚ùå NIE DODAWAJ runs-on tutaj!
    needs: simulate_failure
    if: failure() && (github.event.inputs.test_type == 'failure' || github.event.inputs.test_type == 'both' || github.event_name == 'push')
    uses: ./.github/workflows/discord_notifier.yml
    with:
      status: failure
      environment: TEST-FAILURE
      commit_sha: ${{ github.sha }}
      actor: ${{ github.actor }}
    secrets:
      webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}

  # ===================================================================
  # JOB 5: Podsumowanie testu
  # ===================================================================
  test_summary:
    name: üìä Test Summary
    runs-on: ubuntu-latest
    needs: [notify_success, notify_failure]
    if: always()

    steps:
      - name: üìã Display results
        run: |
          echo "==================================="
          echo "üß™ Discord Notifier Test Summary"
          echo "==================================="
          echo ""
          echo "Test Type: ${{ github.event.inputs.test_type || 'both (auto)' }}"
          echo "Triggered by: ${{ github.actor }}"
          echo ""
          echo "Results:"
          echo "  - Success notification: ${{ needs.notify_success.result || 'skipped' }}"
          echo "  - Failure notification: ${{ needs.notify_failure.result || 'skipped' }}"
          echo ""
          echo "‚úÖ Check your Discord channel for notifications!"
          echo "==================================="
