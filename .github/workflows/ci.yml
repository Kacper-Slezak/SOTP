# .github/workflows/ci.yml - Główny workflow CI (Lint, Test, Build)

name: CI - Continuous Integration

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  # ===================================================================
  # JOB 1: LINT - Sprawdzenie stylu kodu (bez zmian, jest OK)
  # ===================================================================
  lint:
    name:  Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install linting tools
        run: pip install black isort flake8
      - name: Check formatting with Black
        run: black --check --diff .
      - name: Check imports with isort
        run: isort --check-only --diff .

  # ===================================================================
  # JOB 2: TEST - Uruchomienie testów (TUTAJ SĄ POPRAWKI)
  # ===================================================================
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- KROKI DLA BACKENDU ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt # Poprawiona ścieżka do cache

      - name: Install backend dependencies
        run: pip install -r backend/requirements.txt

      - name: Run backend tests
        # Uruchamiamy pytest, wskazując DOKŁADNIE, gdzie są testy
        run: pytest backend/tests/

      # --- KROKI DLA FRONTENDU ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json # Poprawiona ścieżka do cache

      - name: Install frontend dependencies
        # --prefix wskazuje, w którym folderze ma działać npm
        run: npm ci --prefix frontend

      - name: Run frontend tests
        run: npm test --prefix frontend

  # ===================================================================
  # JOB 3: BUILD - Zbudowanie Docker image (UWAGA: to też wymaga poprawki)
  # ===================================================================
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend # Wskazujemy na folder backendu
          file: ./backend/Dockerfile # Wskazujemy na jego Dockerfile
          push: false
          tags: sotp-backend:ci-${{ github.sha }}

      - name: Build Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend # Wskazujemy na folder frontendu
          file: ./frontend/Dockerfile # Wskazujemy na jego Dockerfile
          push: false
          tags: sotp-frontend:ci-${{ github.sha }}

  # ===================================================================
  # JOB 4: NOTIFY - Powiadomienie na Discord (bez zmian, jest OK)
  # ===================================================================
  notify_on_push:
    name: Discord Notification
    needs: [lint, test, build]
    if: success() && github.event_name == 'push'
    uses: ./.github/workflows/discord_notifier.yml
    with:
      status: success
      environment: ${{ github.ref_name }}
      commit_sha: ${{ github.sha }}
      actor: ${{ github.actor }}
    secrets:
      webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}

  notify_on_failure:
    name: Failure Notification
    needs: [lint, test, build]
    if: failure() && github.event_name == 'push'
    uses: ./.github/workflows/discord_notifier.yml
    with:
      status: failure
      environment: ${{ github.ref_name }}
      commit_sha: ${{ github.sha }}
      actor: ${{ github.actor }}
    secrets:
      webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}